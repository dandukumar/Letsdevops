name: Python CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      PACKAGE_VERSION: ${{ steps.set_version.outputs.package_version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Specify the Python version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Set version
      id: set_version
      run: |
        PACKAGE_VERSION=$(date +'%Y.%m.%d.%H%M%S')
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
        echo "::set-output name=package_version::$PACKAGE_VERSION"

    - name: Build wheel
      env:
        PACKAGE_VERSION: ${{ steps.set_version.outputs.package_version }}
      run: |
        cd datascience_project/myfirst_project
        python setup.py sdist bdist_wheel

    - name: List wheel files
      run: |
        ls -al datascience_project/myfirst_project/dist

    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: wheel-files-${{ steps.set_version.outputs.package_version }}
        path: datascience_project/myfirst_project/dist/*.whl

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Specify the Python version you need

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wheel-files-${{ needs.build.outputs.PACKAGE_VERSION }}
        path: dist

    - name: List downloaded files
      run: ls -al dist

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dist/*.whl

    - name: Run tests
      run: |
        pip install pytest
        pytest
