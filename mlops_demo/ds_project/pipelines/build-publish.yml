# build-and-publish.yml
parameters:
  - name: pythonVersion
    type: string
    default: '3.x'
  - name: wheelFile
    type: string
    default: 'dist/your_project_name-0.1-py3-none-any.whl'

jobs:
- job: BuildAndPublish
  pool:
    vmImage: 'ubuntu-latest'
  
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: ${{ parameters.pythonVersion }}
      addToPath: true

  - script: |
      # Print the current directory for debugging
      echo "Current directory:"
      pwd
    
      # List the contents of the current directory for debugging
      echo "Directory contents:"
      ls -la
    
      # Navigate to the parent directory
      cd ds_project
    
      # Print the directory after changing for debugging
      echo "New current directory:"
      pwd
    
      # List the contents of the new directory for debugging
      echo "New directory contents:"
      ls -la
      
      # Check if setup.py exists
      if [ ! -f setup.py ]; then
          echo "Error: setup.py not found in the parent directory."
          exit 1
      fi
      python -m pip install --upgrade pip
      pip install setuptools wheel
      python setup.py sdist bdist_wheel
    displayName: 'Build Wheel Package'

  - task: PublishPipelineArtifact@1
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
    inputs:
      targetPath: 'ds_project/dist'
      artifactName: 'wheel'
    displayName: 'Publish Wheel Artifact'
  
  - script: |
     pip install build
     pip install twine
    displayName: 'Install build and twine'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')

  - task: TwineAuthenticate@1
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    inputs:
     artifactFeed: DevRabo/ds_project_feed
    displayName: 'Twine Authenticate'

  - script: |
     python -m twine upload -r ds_project_feed --config-file $(PYPIRC_PATH) ds_project/dist/*.whl
    displayName: 'Upload to feed'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
